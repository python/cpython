# This is coded as an action rather than a workflow so the release-tools
# repository can load it from a dynamically-chosen commit. Cross-repository
# workflow calls must have a Git reference hard-coded in the calling workflow,
# but actions can be run dynamically from the runner's filesystem.

name: Build and test (Android)
description: Build and test (Android)

inputs:
  triplet:
    description: Host triplet
    required: true

runs:
  using: composite

  steps:
    # The steps of a composite action are not clearly divided in the GitHub
    # UI, so use a single step with ::group:: markers instead.
    - shell: bash
      run: |
        echo "::group::Configure build Python"
        ./Android/android.py configure-build
        echo "::endgroup::"

        echo "::group::Compile build Python"
        ./Android/android.py make-build
        echo "::endgroup::"

        echo "::group::Configure host Python"
        ./Android/android.py configure-host ${{ inputs.triplet }}
        echo "::endgroup::"

        echo "::group::Compile host Python"
        ./Android/android.py make-host ${{ inputs.triplet }}
        echo "::endgroup::"

        echo "::group::Make release package"
        ./Android/android.py package ${{ inputs.triplet }}
        echo "::endgroup::"

        if [ "$RUNNER_OS" = "Linux" ] && [ "$RUNNER_ARCH" = "X64"]; then
            # https://github.blog/changelog/2024-04-02-github-actions-hardware-accelerated-android-virtualization-now-available/
            echo "::group::Enable KVM for Android emulator"
            echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' \
              | sudo tee /etc/udev/rules.d/99-kvm4all.rules
            sudo udevadm control --reload-rules
            sudo udevadm trigger --name-match=kvm
            echo "::endgroup::"

            echo "::group::Unpack release artifact"
            mkdir $RUNNER_TEMP/android
            tar -C $RUNNER_TEMP/android -xf cross-build/${{ inputs.triplet }}/dist/*
            echo "::endgroup::"

            echo "::group::Tests"
            # Arguments are similar to --fast-ci, but in single-process mode.
            $RUNNER_TEMP/android/android.py test --managed maxVersion -v -- \
              --single-process --fail-env-changed --rerun --slowest --verbose3 \
              -u "all,-cpu" --timeout=600
            echo "::endgroup::"

        else
            echo "Skipping test: GitHub Actions currently only supports the " \
              "Android emulator on Linux x86_64."
        fi

    - uses: actions/upload-artifact@v4
      with:
        name: ${{ inputs.triplet }}
        path: cross-build/${{ inputs.triplet }}/dist/*
        if-no-files-found: error
