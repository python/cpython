name: Reusable Android

on:
  workflow_call:
    inputs:
      arch:
        description: CPU architecture
        required: true
        type: string
      check-name:
        description: A custom name for the Checks API-reported status
        required: false
        type: string
      runner-vm-os:
        description: VM OS to use
        required: true
        type: string
      timeout-minutes:
        description: Deadline for the job to complete
        required: true
        type: number
    outputs:
      steps:
        description: >-
          JSON-formatted collection of all build steps with their outputs
        value: ${{ jobs.build.outputs.steps }}

env:
  FORCE_COLOR: 1
  ANDROID_CI_SCRIPT_TRIPLET: ${{ inputs.arch }}-linux-android

jobs:
  build:
    name: >-
      ${{
        inputs.check-name
        && inputs.check-name
        || format(
             '{0}@ðŸ’»{1}',
             inputs.runner-vm-os,
             inputs.arch
           )
      }}

    runs-on: ${{ inputs.runner-vm-os }}

    timeout-minutes: ${{ inputs.timeout-minutes }}

    outputs:
      steps: ${{ toJSON(steps) }}

    steps:
    - name: Fetch CPython source from Git
      uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      with:
        persist-credentials: false

    - name: Build and test
      run: ./Android/android.py ci "${ANDROID_CI_SCRIPT_TRIPLET}"
